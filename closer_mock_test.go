// Code generated by MockGen. DO NOT EDIT.
// Source: server_test.go

// Package goconnpool is a generated GoMock package.
package goconnpool

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Mockcloser is a mock of closer interface
type Mockcloser struct {
	ctrl     *gomock.Controller
	recorder *MockcloserMockRecorder
}

// MockcloserMockRecorder is the mock recorder for Mockcloser
type MockcloserMockRecorder struct {
	mock *Mockcloser
}

// NewMockcloser creates a new mock instance
func NewMockcloser(ctrl *gomock.Controller) *Mockcloser {
	mock := &Mockcloser{ctrl: ctrl}
	mock.recorder = &MockcloserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mockcloser) EXPECT() *MockcloserMockRecorder {
	return m.recorder
}

// Close mocks base method
func (m *Mockcloser) Close() {
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close
func (mr *MockcloserMockRecorder) Close() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*Mockcloser)(nil).Close))
}
